# Build stage
FROM node:20-alpine AS builder

# Set working directory
WORKDIR /app

# Define build arguments
ARG VITE_AUTH0_DOMAIN
ARG VITE_AUTH0_CLIENT_ID
ARG VITE_AUTH0_AUDIENCE
ARG VITE_API_URL
ARG VITE_WEBSOCKET_URL

# First copy only package.json
COPY package.json ./

# Debug package.json scripts
RUN echo "=== Package.json Contents ===" && \
    cat package.json && \
    echo "=== Available Scripts ===" && \
    grep '"scripts"' -A 10 package.json

# Install dependencies with debug output
RUN npm install && npm list

# Then copy the rest of the frontend files
COPY . .

# Debug project structure
RUN echo "=== Project Structure ===" && \
    ls -R && \
    echo "=== Vite Config (if exists) ===" && \
    [ -f vite.config.js ] && cat vite.config.js || echo "No vite.config.js found" && \
    echo "=== Build Script ===" && \
    [ -f package.json ] && grep -A 5 '"build"' package.json || echo "No build script found"

# Create .env file with build arguments
RUN echo "VITE_AUTH0_DOMAIN=$VITE_AUTH0_DOMAIN" > .env && \
    echo "VITE_AUTH0_CLIENT_ID=$VITE_AUTH0_CLIENT_ID" >> .env && \
    echo "VITE_AUTH0_AUDIENCE=$VITE_AUTH0_AUDIENCE" >> .env && \
    echo "VITE_API_URL=$VITE_API_URL" >> .env && \
    echo "VITE_WEBSOCKET_URL=$VITE_WEBSOCKET_URL" >> .env

# Try to run build with maximum verbosity
RUN set -x && \
    echo "=== Node Version ===" && node -v && \
    echo "=== NPM Version ===" && npm -v && \
    echo "=== Environment ===" && env && \
    echo "=== Starting Build ===" && \
    npm run build --dd

# Production stage
FROM nginx:alpine

# Copy build files to nginx
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy custom nginx configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Expose port
EXPOSE 80

# Start nginx
CMD ["nginx", "-g", "daemon off;"]
