version: '3.8'

services:
    backend:
        build:
            context: .
            dockerfile: Dockerfile.backend
        ports:
            - '8080:8080'
        environment:
            DATABASE_URL: postgresql://horsetracker:R2,Y@B&wO46.Ln}Q@postgres:5432/horse_tracking_db
            JWT_SECRET: your-super-secret-key-replace-in-production
            AUTH0_DOMAIN: dev-r083cwkcv0pgz20x.eu.auth0.com
            AUTH0_AUDIENCE: https://api.hulta-foaltracker.app
            ENVIRONMENT: production
        depends_on:
            postgres:
                condition: service_healthy
        restart: unless-stopped

    frontend:
        build:
            context: .
            dockerfile: Dockerfile.frontend
        ports:
            - '80:80'
        depends_on:
            - backend
        restart: unless-stopped

    postgres:
        image: postgres:15-alpine
        environment:
            POSTGRES_DB: horse_tracking_db
            POSTGRES_USER: horsetracker
            POSTGRES_PASSWORD: R2,Y@B&wO46.Ln}Q
        volumes:
            - postgres_data:/var/lib/postgresql/data
        healthcheck:
            test:
                ['CMD-SHELL', 'pg_isready -U horsetracker -d horse_tracking_db']
            interval: 10s
            timeout: 5s
            retries: 5
        restart: unless-stopped

volumes:
    postgres_data:
